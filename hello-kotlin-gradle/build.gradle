/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
buildscript {
    ext {
        kotlinVersion = '1.3.61'
        junitVersion  = '5.5.2'
    }

    repositories {
        // maven {
        //     name 'Nexus Releases'
        //     url 'http://nexus.aic.serpro/content/repositories/releases'
        // }
        maven {
            name 'Nexus Public Repository Index'
            url 'http://nexus.aic.serpro/content/groups/public'
        }
        // jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    // Suporte a Java:
    // id 'java'

    // Aplica o plugin do Kotlin suporte ao alvo JVM
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"

    // Define a task run para executar a aplicação
    id 'application'
}

// Necessário? O que muda?
sourceCompatibility = 1.8
// sourceCompatibility = 12

group 'br.com.hbobenicio.kotlinexamples'
version '0.1.0-SNAPSHOT'

repositories {
    // maven {
    //     name 'Nexus Releases'
    //     url 'http://nexus.aic.serpro/content/repositories/releases'
    // }
    maven {
		name 'Nexus Public Repository Index'
		url 'http://nexus.aic.serpro/content/groups/public'
	}
    // jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform("org.jetbrains.kotlin:kotlin-bom:$kotlinVersion")

    // implementation vs compile:
    // compile está deprecated, mas como fazer a task `jar` configurar corretamente o classpath?
    // bibliotecas devem usar implementation, e não compile
    // implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // if you use kotlin reflection (https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.reflect.full/index.html)
    // implementation "org.jetbrains.kotlin:kotlin-reflect"
    
    // Testes
    testImplementation platform("org.junit:junit-bom:$junitVersion")
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}

// https://kotlinlang.org/docs/reference/using-gradle.html#compiler-options
compileKotlin {
    kotlinOptions {
        // Specify the target version of the generated JVM bytecode.
        // Possible values are 1.6, 1.8, 9, 10, 11, and 12. The default value is 1.6.
        jvmTarget = "1.8"
        // jvmTarget = "12"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        // jvmTarget = "12"
    }
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

application {
    mainClassName = 'br.com.hbobenicio.kotlinexamples.hellokotlingradle.MainKt'
}

jar {
    manifest {
        attributes 'Main-Class': 'br.com.hbobenicio.kotlinexamples.hellokotlingradle.MainKt'
    }

    // Adiciona as dependencias 'implementation' ao classpath do jar
    from { 
        configurations.compileClasspath.collect {
            it.isDirectory() ? it : zipTree(it) 
        } 
    }
}
